- name: Configure firewall rules
  block:
    - name: 3.4.2.1 Ensure firewalld default zone is set
      block:
        - name: Copy audit script to host
          copy:
            src: "scripts/3_4_2_1"
            dest: "/tmp/audit/3_4_2_1"
            mode: '0755'

        - name: Remove carriage return characters from the audit script
          shell: sed -i 's/\r$//' /tmp/audit/3_4_2_1

        - name: Run audit script
          shell: /tmp/audit/3_4_2_1
          register: audit_output 

        - name: Set compliance status
          set_fact:
            compliance_status: "{{ 'Compliant' if 'Pass' in audit_output.stdout else 'Not Compliant' if 'Fail' in audit_output.stdout else 'Unknown' }}"

        - name: Log to file
          include_tasks: ../logging.yml
          vars:
            status: "3.4.2.1 | {{ compliance_status }}"
            result: "### 3.4.2.1 \n```{{ audit_output.stdout }}\n```\n"

    - name: 3.4.2.2 Ensure at least one nftables table exist
      block:
        - name: Check nftables table list
          shell: nft list tables
          register: output

        - name: Set compliance status
          set_fact:
            compliance_status: "{{ 'Compliant' if output.stdout != '' else 'Not Compliant' }}"

        - name: Log to file
          include_tasks: ../logging.yml
          vars:
            status: "3.4.2.2 | {{ compliance_status }}"      

    - name: 3.4.2.3 Ensure nftables base chains exist
      block:
        - name: Check hook input in ruleset
          shell: nft list ruleset | grep 'hook input'
          register: hook_input
          failed_when: hook_input.rc == 2
          changed_when: false
          
        - name: Check hook forward in ruleset
          shell: nft list ruleset | grep 'hook forward'
          register: hook_forward
          failed_when: hook_forward.rc == 2
          changed_when: false

        - name: Check hook output in ruleset
          shell: nft list ruleset | grep 'hook output'
          register: hook_output
          failed_when: hook_output.rc == 2
          changed_when: false

        - name: Set compliance status
          set_fact:
            compliance_status: "{{ 'Compliant' if hook_input.stdout != '' and hook_forward.stdout != '' and hook_output.stdout != '' else 'Not Compliant' }}"

        - name: Log to file
          include_tasks: ../logging.yml
          vars:
            status: "3.4.2.3 | {{ compliance_status }}" 

    - name: 3.4.2.4 Ensure host based firewall loopback traffic is configured
      block:
        - name: Copy audit script to host
          copy:
            src: "scripts/3_4_2_4"
            dest: "/tmp/audit/3_4_2_4"
            mode: '0755'

        - name: Remove carriage return characters from the audit script
          shell: sed -i 's/\r$//' /tmp/audit/3_4_2_4

        - name: Run audit script
          shell: /tmp/audit/3_4_2_4
          register: audit_output 

        - name: Set compliance status
          set_fact:
            compliance_status: "{{ 'Compliant' if 'PASS' in audit_output.stdout else 'Not Compliant' if 'FAIL' in audit_output.stdout else 'Unknown' }}"

        - name: Log to file
          include_tasks: ../logging.yml
          vars:
            status: "3.4.2.4 | {{ compliance_status }}"
            result: "### 3.4.2.4 \n```{{ audit_output.stdout }}\n```\n"

    - name: 3.4.2.7 Ensure nftables default deny firewall policy
      block:
        - name: Check hook input for policy drop
          shell: systemctl --quiet is-enabled nftables.service && nft list ruleset | grep 'hook input' | grep -v 'policy drop'
          register: hook_input
          failed_when: hook_input.rc == 2
          changed_when: false

        - name: Check hook forward for policy drop
          shell: systemctl --quiet is-enabled nftables.service && nft list ruleset | grep 'hook forward' | grep -v 'policy drop'
          register: hook_forward
          failed_when: hook_forward.rc == 2
          changed_when: false

        - name: Set compliance status
          set_fact:
            compliance_status: "{{ 'Compliant' if hook_input.stdout == '' and hook_forward.stdout == '' else 'Not Compliant' }}"

        - name: Log to file
          include_tasks: ../logging.yml
          vars:
            status: "3.4.2.7 | {{ compliance_status }}"